<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sxu.crm.basic.mapper.CrmBusinessProductMapper">
  <resultMap id="BaseResultMap" type="com.sxu.crm.basic.domain.CrmBusinessProduct">
    <!--@mbg.generated-->
    <!--@Table crm_business_product-->
    <id column="r_id" jdbcType="INTEGER" property="rId" />
    <result column="business_id" jdbcType="INTEGER" property="businessId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="sales_price" jdbcType="DECIMAL" property="salesPrice" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="discount" jdbcType="DECIMAL" property="discount" />
    <result column="subtotal" jdbcType="DECIMAL" property="subtotal" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    r_id, business_id, product_id, price, sales_price, num, discount, subtotal, unit
  </sql>
  <select id="selectByExample" parameterType="com.sxu.crm.basic.domain.CrmBusinessProductExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from crm_business_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from crm_business_product
    where r_id = #{rId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from crm_business_product
    where r_id = #{rId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sxu.crm.basic.domain.CrmBusinessProductExample">
    <!--@mbg.generated-->
    delete from crm_business_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="r_id" keyProperty="rId" parameterType="com.sxu.crm.basic.domain.CrmBusinessProduct" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into crm_business_product (business_id, product_id, price, 
      sales_price, num, discount, 
      subtotal, unit)
    values (#{businessId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, 
      #{salesPrice,jdbcType=DECIMAL}, #{num,jdbcType=INTEGER}, #{discount,jdbcType=DECIMAL}, 
      #{subtotal,jdbcType=DECIMAL}, #{unit,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="r_id" keyProperty="rId" parameterType="com.sxu.crm.basic.domain.CrmBusinessProduct" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into crm_business_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="businessId != null">
        business_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="salesPrice != null">
        sales_price,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="subtotal != null">
        subtotal,
      </if>
      <if test="unit != null">
        unit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="businessId != null">
        #{businessId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="salesPrice != null">
        #{salesPrice,jdbcType=DECIMAL},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=DECIMAL},
      </if>
      <if test="subtotal != null">
        #{subtotal,jdbcType=DECIMAL},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sxu.crm.basic.domain.CrmBusinessProductExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from crm_business_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update crm_business_product
    <set>
      <if test="record.rId != null">
        r_id = #{record.rId,jdbcType=INTEGER},
      </if>
      <if test="record.businessId != null">
        business_id = #{record.businessId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.salesPrice != null">
        sales_price = #{record.salesPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=DECIMAL},
      </if>
      <if test="record.subtotal != null">
        subtotal = #{record.subtotal,jdbcType=DECIMAL},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update crm_business_product
    set r_id = #{record.rId,jdbcType=INTEGER},
      business_id = #{record.businessId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      sales_price = #{record.salesPrice,jdbcType=DECIMAL},
      num = #{record.num,jdbcType=INTEGER},
      discount = #{record.discount,jdbcType=DECIMAL},
      subtotal = #{record.subtotal,jdbcType=DECIMAL},
      unit = #{record.unit,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sxu.crm.basic.domain.CrmBusinessProduct">
    <!--@mbg.generated-->
    update crm_business_product
    <set>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="salesPrice != null">
        sales_price = #{salesPrice,jdbcType=DECIMAL},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=DECIMAL},
      </if>
      <if test="subtotal != null">
        subtotal = #{subtotal,jdbcType=DECIMAL},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
    </set>
    where r_id = #{rId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sxu.crm.basic.domain.CrmBusinessProduct">
    <!--@mbg.generated-->
    update crm_business_product
    set business_id = #{businessId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      sales_price = #{salesPrice,jdbcType=DECIMAL},
      num = #{num,jdbcType=INTEGER},
      discount = #{discount,jdbcType=DECIMAL},
      subtotal = #{subtotal,jdbcType=DECIMAL},
      unit = #{unit,jdbcType=VARCHAR}
    where r_id = #{rId,jdbcType=INTEGER}
  </update>
</mapper>